/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Random;
import javax.swing.JColorChooser;
import javax.swing.SwingUtilities;
import model.Borracha;
import model.Cilindro;
import model.Circulo;
import model.D2;
import model.Ponto;
import model.Reta;
import model.Retangulo;
import model.Piramide;

/**
 *
 * @author JonathasOliveira
 */
public class FrMain extends javax.swing.JFrame {

    public Ferramenta ferramentaSelecionada = Ferramenta.NENHUMA;
    Retangulo retangulo = new Retangulo();
    Circulo circulo = new Circulo();
    Reta reta = new Reta();
    Borracha borracha = new Borracha();
    Ponto ponto = new Ponto();
    Cilindro cilindro = new Cilindro();
    Piramide piramide = new Piramide();

    public enum Ferramenta {
        NENHUMA, PONTO, RETA, CIRCULO, RETANGULO, BORRACHA, SPRAY, CILINDRO, POLIGONO, PIRAMIDE
    }

    private void atualizarEstadoBotoes(javax.swing.JButton botaoSelecionado) {
    // Resetar cor de todos os botões
    btnPonto.setBackground(null);
    btnReta.setBackground(null);
    btnCirculo.setBackground(null);
    btnRetangulo.setBackground(null);
    btnBorracha.setBackground(null);
    btnSpray.setBackground(null);
    btnCilindro.setBackground(null);
    btnTriangulo.setBackground(null);
    
    // Definir cor do botão ativo
    if (botaoSelecionado != null) {
        botaoSelecionado.setBackground(Color.LIGHT_GRAY);
    }
}
    /**
     * Creates new form FrMain
     */
    public FrMain() {
        initComponents();
        Color amarelo = new Color(255, 255, 224);
        jFrameDesenho.setBackground(amarelo);
        jCorPrincipal.setBackground(Color.BLACK);
        jCorSecundaria.setBackground(Color.WHITE);

        //Queria essa funcionalidade do DoubleClick Selecionar a cor
        MouseAdapter colorChooserMouseListener = new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                if (evt.getClickCount() == 2) { //ve se foi 2 click
                    Color corSelecionada = jColorChooser1.getColor();

                    if (SwingUtilities.isLeftMouseButton(evt)) {
                        jCorPrincipal.setBackground(corSelecionada);
                    } else if (SwingUtilities.isRightMouseButton(evt)) {
                        jCorSecundaria.setBackground(corSelecionada);
                    }
                }
            }
        };

        // Add um listener em todos os subcomp. do JColorChooser
        addMouseListener(jColorChooser1, colorChooserMouseListener);
    }

    private void addMouseListener(Component comp, MouseListener ml) {
        comp.addMouseListener(ml);
        if (comp instanceof Container) {
            for (Component child : ((Container) comp).getComponents()) {
                addMouseListener(child, ml);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrameDesenho = new javax.swing.JPanel();
        btnPonto = new javax.swing.JButton();
        btnReta = new javax.swing.JButton();
        jCorPrincipal = new javax.swing.JPanel();
        jCorSecundaria = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jColorChooser1 = new javax.swing.JColorChooser();
        btnCirculo = new javax.swing.JButton();
        btnRetangulo = new javax.swing.JButton();
        btnBorracha = new javax.swing.JButton();
        btnSpray = new javax.swing.JButton();
        btnCilindro = new javax.swing.JButton();
        btnTriangulo = new javax.swing.JButton();
        cbTexto = new java.awt.Checkbox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jFrameDesenho.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jFrameDesenho.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jFrameDesenhoMouseDragged(evt);
            }
        });
        jFrameDesenho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFrameDesenhoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jFrameDesenhoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jFrameDesenhoMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jFrameDesenhoLayout = new javax.swing.GroupLayout(jFrameDesenho);
        jFrameDesenho.setLayout(jFrameDesenhoLayout);
        jFrameDesenhoLayout.setHorizontalGroup(
            jFrameDesenhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 769, Short.MAX_VALUE)
        );
        jFrameDesenhoLayout.setVerticalGroup(
            jFrameDesenhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );

        btnPonto.setText("1 - Ponto");
        btnPonto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPontoMouseClicked(evt);
            }
        });
        btnPonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPontoActionPerformed(evt);
            }
        });

        btnReta.setText("2 - Reta");
        btnReta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRetaMouseClicked(evt);
            }
        });
        btnReta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetaActionPerformed(evt);
            }
        });

        jCorPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jCorPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCorPrincipalMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jCorPrincipalLayout = new javax.swing.GroupLayout(jCorPrincipal);
        jCorPrincipal.setLayout(jCorPrincipalLayout);
        jCorPrincipalLayout.setHorizontalGroup(
            jCorPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jCorPrincipalLayout.setVerticalGroup(
            jCorPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jCorSecundaria.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jCorSecundaria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCorSecundariaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jCorSecundariaLayout = new javax.swing.GroupLayout(jCorSecundaria);
        jCorSecundaria.setLayout(jCorSecundariaLayout);
        jCorSecundariaLayout.setHorizontalGroup(
            jCorSecundariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jCorSecundariaLayout.setVerticalGroup(
            jCorSecundariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setText("Cor Primária");

        jLabel2.setText("Cor Secundária");

        jColorChooser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jColorChooser1MouseClicked(evt);
            }
        });

        btnCirculo.setText("3 -Círculo");
        btnCirculo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCirculoMouseClicked(evt);
            }
        });
        btnCirculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCirculoActionPerformed(evt);
            }
        });

        btnRetangulo.setText("4 - Retangulo");
        btnRetangulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRetanguloMouseClicked(evt);
            }
        });
        btnRetangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetanguloActionPerformed(evt);
            }
        });

        btnBorracha.setText("5 - Borracha");
        btnBorracha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBorrachaMouseClicked(evt);
            }
        });
        btnBorracha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrachaActionPerformed(evt);
            }
        });

        btnSpray.setText("6 -Spray");
        btnSpray.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSprayMouseClicked(evt);
            }
        });
        btnSpray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSprayActionPerformed(evt);
            }
        });

        btnCilindro.setText("7 - Cilindro");
        btnCilindro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCilindroMouseClicked(evt);
            }
        });
        btnCilindro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCilindroActionPerformed(evt);
            }
        });

        btnTriangulo.setText("9 - Pirâmide");
        btnTriangulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTrianguloMouseClicked(evt);
            }
        });

        cbTexto.setLabel("Exibir área e perímetro");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnCirculo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnBorracha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCilindro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnPonto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnSpray, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnRetangulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnReta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnTriangulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(22, 22, 22))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jCorPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorSecundaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(cbTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jColorChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jFrameDesenho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jFrameDesenho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPonto)
                            .addComponent(btnReta))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCirculo)
                            .addComponent(btnRetangulo))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBorracha)
                            .addComponent(btnSpray))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCilindro)
                            .addComponent(btnTriangulo))
                        .addGap(28, 28, 28)
                        .addComponent(cbTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jColorChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                            .addComponent(jCorPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jCorSecundaria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        setBounds(0, 0, 1057, 574);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetaActionPerformed

    }//GEN-LAST:event_btnRetaActionPerformed

    private void btnPontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPontoActionPerformed

    private void btnPontoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPontoMouseClicked

        ferramentaSelecionada = Ferramenta.PONTO;
        atualizarEstadoBotoes(btnPonto);
    }//GEN-LAST:event_btnPontoMouseClicked

    private void jCorPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCorPrincipalMouseClicked
        jCorPrincipal.setBackground(jColorChooser1.getColor());
    }//GEN-LAST:event_jCorPrincipalMouseClicked

    private void jCorSecundariaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCorSecundariaMouseClicked
        jCorSecundaria.setBackground(jColorChooser1.getColor());
    }//GEN-LAST:event_jCorSecundariaMouseClicked

    private void jFrameDesenhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFrameDesenhoMouseClicked
        switch (ferramentaSelecionada) {
            case NENHUMA:
                if (SwingUtilities.isLeftMouseButton(evt)) {
                    jFrameDesenho.setBackground(jCorPrincipal.getBackground());
                } else if (SwingUtilities.isRightMouseButton(evt)) {
                    jFrameDesenho.setBackground(jCorSecundaria.getBackground());
                }

                break;
            case PONTO:
                if (SwingUtilities.isLeftMouseButton(evt)) {
                    ponto.corPrimaria = jCorPrincipal.getBackground();
                } else if (SwingUtilities.isRightMouseButton(evt)) {
                    ponto.corPrimaria = jCorSecundaria.getBackground();
                }
                ponto.x = evt.getX(); //A coordenada x do ponto é definida como a coordenada x do evento do mouse
                ponto.y = evt.getY(); //A coordenada y do ponto é definida como a coordenada y do evento do mouse
                ponto.desenhar(jFrameDesenho.getGraphics());
                break;
        }


    }//GEN-LAST:event_jFrameDesenhoMouseClicked

    private void jFrameDesenhoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFrameDesenhoMousePressed
        switch (ferramentaSelecionada) {
            case RETA:
                if (SwingUtilities.isLeftMouseButton(evt)) {
                    reta.corPrimaria = jCorPrincipal.getBackground();
                } else if (SwingUtilities.isRightMouseButton(evt)) {
                    reta.corPrimaria = jCorSecundaria.getBackground();
                }

                reta.x = evt.getX();
                reta.y = evt.getY();
                break;
            case CIRCULO:
                if (SwingUtilities.isLeftMouseButton(evt)) {
                    circulo.corPrimaria = jCorPrincipal.getBackground();
                    circulo.corInterna = jCorSecundaria.getBackground();
                } else if (SwingUtilities.isRightMouseButton(evt)) {
                    circulo.corPrimaria = jCorSecundaria.getBackground();
                    circulo.corInterna = jCorPrincipal.getBackground();
                }
                circulo.x = evt.getX(); //As coordenadas do círculo são definidas como as coordenadas do evento do mouse 
                circulo.y = evt.getY();
                break;
            case RETANGULO:
                if (SwingUtilities.isLeftMouseButton(evt)) {
                    retangulo.corPrimaria = jCorPrincipal.getBackground();
                    retangulo.corInterna = jCorSecundaria.getBackground();
                } else if (SwingUtilities.isRightMouseButton(evt)) {
                    retangulo.corPrimaria = jCorSecundaria.getBackground();
                    retangulo.corInterna = jCorPrincipal.getBackground();
                }
                retangulo.x = evt.getX();
                retangulo.y = evt.getY();
                break;
            case BORRACHA:
                borracha.x = evt.getX(); //As coordenadas da borracha são definidas como as coordenadas do evento do mouse 
                borracha.y = evt.getY();
                break;
            case CILINDRO:
                if (SwingUtilities.isLeftMouseButton(evt)) {
                    cilindro.corPrimaria = jCorPrincipal.getBackground();
                    cilindro.corInterna = jCorSecundaria.getBackground();
                } else if (SwingUtilities.isRightMouseButton(evt)) {
                    cilindro.corPrimaria = jCorSecundaria.getBackground();
                    cilindro.corInterna = jCorPrincipal.getBackground();
                }
                cilindro.x = evt.getX();
                cilindro.y = evt.getY();
                break;
            case PIRAMIDE:
                if (SwingUtilities.isLeftMouseButton(evt)) {
                    piramide.corInterna = jCorPrincipal.getBackground();
                    piramide.corPrimaria = jCorSecundaria.getBackground();
                } else if (SwingUtilities.isRightMouseButton(evt)) {
                    piramide.corInterna = jCorSecundaria.getBackground();
                    piramide.corPrimaria = jCorPrincipal.getBackground();
                }
                piramide.x = evt.getX();
                piramide.y = evt.getY();
                break;
        }


    }//GEN-LAST:event_jFrameDesenhoMousePressed

    private void btnRetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRetaMouseClicked

        ferramentaSelecionada = Ferramenta.RETA;
        atualizarEstadoBotoes(btnReta);
    }//GEN-LAST:event_btnRetaMouseClicked

    private void jFrameDesenhoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFrameDesenhoMouseDragged
        switch (ferramentaSelecionada) {
            case PONTO:
                ponto.x = evt.getX();
                ponto.y = evt.getY();
                ponto.corPrimaria = jCorPrincipal.getBackground();
                ponto.desenhar(jFrameDesenho.getGraphics());
                break;
            case SPRAY:
                if (SwingUtilities.isLeftMouseButton(evt)) {
                    ponto.corPrimaria = jCorPrincipal.getBackground();
                } else if (SwingUtilities.isRightMouseButton(evt)) {
                    ponto.corPrimaria = jCorSecundaria.getBackground();
                }
                Random gerador = new Random();
                for (int i = 0; i < gerador.nextInt(50); i++) { // Durante cada iteração, são gerados valores aleatórios numX e numY entre 0 e 30.
                    int numX = gerador.nextInt(30);
                    int numY = gerador.nextInt(30);
                    int ruidoX = gerador.nextInt(5) - 2; // Ruído entre -2 e +2
                    int ruidoY = gerador.nextInt(5) - 2; // Ruído entre -2 e +2
                    ponto.x = (evt.getX() - 15) + numX + ruidoX; //As coordenadas são configuradas de acordo com o movimento em relação ao mouse
                    ponto.y = (evt.getY() - 15) + numY + ruidoY;

                    if ((((evt.getX()) - ponto.x) * ((evt.getX()) - ponto.x)) //Verificando se o ponto gerado está dentro de um círculo com raio 15
                            + (((evt.getY()) - ponto.y) * ((evt.getY()) - ponto.y)) <= (15 * 15)) {
                        //(Cx - Px)^2 + (Cy - Py)^2 < Raio^2
                        ponto.desenhar(jFrameDesenho.getGraphics());
                    }
                }
                break;
            case BORRACHA:
                borracha.x = evt.getX();
                borracha.y = evt.getY();
                borracha.corPrimaria = jFrameDesenho.getBackground();
                borracha.desenhar(jFrameDesenho.getGraphics());
                break;
        }


    }//GEN-LAST:event_jFrameDesenhoMouseDragged

    private void jFrameDesenhoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFrameDesenhoMouseReleased
        switch (ferramentaSelecionada) {
            case RETA:
                reta.showArea = cbTexto.getState();
                reta.x1 = evt.getX();
                reta.y1 = evt.getY();
                reta.desenhar(jFrameDesenho.getGraphics());
                break;
            case CIRCULO:
                circulo.showArea = cbTexto.getState();
                circulo.raio = evt.getX() - circulo.x;
                circulo.diametro = evt.getY() - circulo.y;
                circulo.desenhar(jFrameDesenho.getGraphics());
                break;
            case RETANGULO:
                retangulo.showArea = cbTexto.getState();
                retangulo.base = evt.getX() - retangulo.x;
                retangulo.largura = evt.getY() - retangulo.y;
                retangulo.desenhar(jFrameDesenho.getGraphics());
                break;
            case CILINDRO:
                cilindro.showArea = cbTexto.getState();
                cilindro.x1 = evt.getX();
                cilindro.y1 = evt.getY();

                cilindro.desenhar(jFrameDesenho.getGraphics());
                break;
            case PIRAMIDE:
                piramide.showArea = cbTexto.getState();
                piramide.x1 = evt.getX();
                piramide.y1 = evt.getY();
                piramide.largura = evt.getX() - piramide.x;
                piramide.altura = evt.getY() - piramide.y;
                piramide.desenhar(jFrameDesenho.getGraphics());
                break;
        }
    }//GEN-LAST:event_jFrameDesenhoMouseReleased

    private void btnCirculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCirculoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCirculoActionPerformed

    private void btnCirculoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCirculoMouseClicked
        ferramentaSelecionada = Ferramenta.CIRCULO;
        atualizarEstadoBotoes(btnCirculo);
    }//GEN-LAST:event_btnCirculoMouseClicked

    private void btnRetanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetanguloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRetanguloActionPerformed

    private void btnRetanguloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRetanguloMouseClicked

        ferramentaSelecionada = Ferramenta.RETANGULO;
        atualizarEstadoBotoes(btnRetangulo);
    }//GEN-LAST:event_btnRetanguloMouseClicked

    private void btnBorrachaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrachaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBorrachaActionPerformed

    private void btnBorrachaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrachaMouseClicked

        ferramentaSelecionada = Ferramenta.BORRACHA;
        atualizarEstadoBotoes(btnBorracha);
    }//GEN-LAST:event_btnBorrachaMouseClicked

    private void btnSprayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSprayMouseClicked

        ferramentaSelecionada = Ferramenta.SPRAY;//SPRAY
        atualizarEstadoBotoes(btnSpray);
    }//GEN-LAST:event_btnSprayMouseClicked

    private void btnSprayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSprayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSprayActionPerformed

    private void btnCilindroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCilindroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCilindroActionPerformed

    private void btnCilindroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCilindroMouseClicked

        ferramentaSelecionada = Ferramenta.CILINDRO;
        atualizarEstadoBotoes(btnCilindro);
    }//GEN-LAST:event_btnCilindroMouseClicked

    private void btnTrianguloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrianguloMouseClicked

        ferramentaSelecionada = Ferramenta.PIRAMIDE;
        atualizarEstadoBotoes(btnTriangulo);
    }//GEN-LAST:event_btnTrianguloMouseClicked

    private void jColorChooser1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jColorChooser1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jColorChooser1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorracha;
    private javax.swing.JButton btnCilindro;
    private javax.swing.JButton btnCirculo;
    private javax.swing.JButton btnPonto;
    private javax.swing.JButton btnReta;
    private javax.swing.JButton btnRetangulo;
    private javax.swing.JButton btnSpray;
    private javax.swing.JButton btnTriangulo;
    private java.awt.Checkbox cbTexto;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JPanel jCorPrincipal;
    private javax.swing.JPanel jCorSecundaria;
    private javax.swing.JPanel jFrameDesenho;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
